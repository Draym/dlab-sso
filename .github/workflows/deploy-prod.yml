name: Production CI & CD

on:
  push:
    branches: [main]

jobs:
  build:
    name: cd-prod
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run test
      - name: Deploy using ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.VPS_HOST}}
          username: ${{secrets.VPS_USERNAME}}
          key: ${{secrets.PRIVATE_KEY}}
          passphrase: ${{secrets.PRIVATE_PASSPHRASE}}
          port: ${{secrets.VPS_PORT}}
          script: |
            cd ~/home/dlab/apps/dlab-sso
            git pull origin master
            npm ci
            echo "PORT=${{secrets.APP_PORT}}\nLOCALHOST=false\nMYSQL_HOST=${{secrets.MYSQL_HOST}}\nMYSQL_DB_NAME=${{secrets.MYSQL_DB_NAME}}\nMYSQL_USER=${secrets.MYSQL_USER}\nMYSQL_PASSWORD=${{secrets.MYSQL_PASSWORD}}\nMYSQL_PORT=${{secrets.MYSQL_PORT}}\nMAIL_KEY=${{secrets.APP_MAIL_KEY}}\nMAIL_FROM=${{secrets.APP_MAIL_FROM}}\nMAIL_FROM_NAME=${{secrets.APP_MAIL_FROM_NAME}}\nCOOKIE_KEY=${{secrets.APP_COOKIE_KEY}}\nCOOKIE_DOMAIN=${{secrets.COOKIE_DOMAIN}}\nJWT_SECRET=${{secrets.APP_SECRET}}\nJWT_REFRESH_SECRET=${{secrets.APP_JWT_REFRESH_SECRET}}\nAXE_SHOW_META=false" > .env